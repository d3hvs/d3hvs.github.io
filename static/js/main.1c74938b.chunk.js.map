{"version":3,"sources":["app/components/header/index.js","app/components/separator/index.js","app/components/info/index.js","app/data.js","app/components/about-me/index.js","app/components/experience/index.js","app/components/progress-bar/index.js","app/components/skills/skill-item/index.js","app/components/skills/index.js","app/layouts/home/index.js","app/components/jumbotron/index.js","app/index.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Separator","Info","_ref","children","showSeparator","title","separator","defaultProps","experienceInfo","company","dateMax","dateMin","summary","professionalSkilss","progress","AboutMe","info","Experience","build","map","data","index","interval","concat","key","subtitle","ProgressBar","style","width","SkillItem","progress_bar","Skills","skill","skill_item","Object","assign","Home","about_me","experience","skills","openSocialNetwork","path","window","open","Jumbotron","alt","src","onClick","react_social_icons","bgColor","network","Curriculum","HashRouter","basename","header","jumbotron","Switch","Route","exact","component","Boolean","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c74938b.chunk.js","sourcesContent":["import React from 'react';\n\n// @styles\nimport './style.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <nav className=\"nav\" />\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\n\n// @styles\nimport './style.scss';\n\nconst Separator = () => (\n    <div className=\"separator\" />\n);\n\nexport default Separator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Separator from '../separator';\n\n// @styles\nimport './style.scss';\n\nconst Info = ({ children, showSeparator, title }) => (\n    <div className=\"info\">\n        <div className=\"info__title\">\n            {title}\n        </div>\n\n        <div className=\"info__content\">\n            {children}\n        </div>\n\n        { showSeparator && <Separator /> }\n    </div>\n);\n\nInfo.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.element\n    ]).isRequired,\n    showSeparator: PropTypes.bool,\n    title: PropTypes.string.isRequired\n};\n\nInfo.defaultProps = {\n    showSeparator: true\n};\n\nexport default Info;\n","export const aboutMeText = `\n    I am Bioengineer, passionate about programming.\n    I am a Front End Developer, focused in react.js but I love learn new technologies.\n    I'm taking experience using React Native for the development of mobile applications.\n    I have also explored a little Vue.js.\n    I love sharing what I know, learning from others and contributing what I can.\n`;\n\nexport const experienceInfo = [{\n    company: 'Team International',\n    dateMax: 'Present',\n    dateMin: 'Nov 2017',\n    summary: \"I'm part of a big developers group creating an app for a customer from USA, adding new features following Scrum practices for an agile work\",\n    title: 'Front End Developer'\n}, {\n    company: 'Sapco',\n    dateMax: 'May 2017',\n    dateMin: 'Dec 2016',\n    summary: 'As team we developed Mobi app (for Android) using React Native. For web developments was used Angular.js',\n    title: 'Front End Developer'\n}, {\n    company: 'Research Group GIBIC of University of Antioquia',\n    dateMax: 'Sep 2016',\n    dateMin: 'Dec 2015',\n    summary: 'I was fullstack developer of some web apps needed by group. This app was used to make control over their scientists articles to be more clear all information. Another app was being developed to use with some of their devices and show information on real time.',\n    title: 'Front End Developer'\n}, {\n    company: 'Research Group GIBIC of University of Antioquia',\n    dateMax: 'NOv 2015',\n    dateMin: 'Nov 2014',\n    summary: 'I updating their web site and helping with web and desktop software development.',\n    title: 'Front End developer'\n}];\n\nexport const educationInfo = [{\n    dateMax: 'Sep 2014',\n    dateMin: 'May 2008',\n    institution: 'SENA',\n    title: 'Specialist development for Android'\n}, {\n    dateMax: 'Dec 2016',\n    dateMin: 'Jul 2016',\n    institution: 'University of Antioquia',\n    title: 'Bioengineer'\n}];\n\nexport const professionalSkilss = [{\n    title: 'Javascript',\n    progress: 80\n}, {\n    title: 'Css',\n    progress: 70\n}, {\n    title: 'React.js',\n    progress: 75\n}, {\n    title: 'Node.js',\n    progress: 55\n}, {\n    title: 'React Native',\n    progress: 60\n}, {\n    title: 'Python',\n    progress: 60\n}];\n","import React from 'react';\n\n// @components\nimport Info from '../info';\n\n// @data\nimport {\n    aboutMeText\n} from '../../data';\n\n// @styles\nimport './style.scss';\n\nconst AboutMe = () => (\n    <Info title=\"About me\">\n        <div className=\"about-me\">\n            <div className=\"about-me__content\">\n                {aboutMeText}\n            </div>\n        </div>\n    </Info>\n);\n\nexport default AboutMe;\n","import React from 'react';\n\n// @components\nimport { Timeline, Event } from \"react-timeline-scribble\";\n\nimport Info from '../info';\n\n// @data\nimport { experienceInfo } from '../../data';\n\n// @sytles\nimport './style.scss';\n\nconst Experience = () => (\n    <Info title=\"experience\">\n        <div className=\"experience\">\n            <Timeline>\n                {experienceInfo.map((data, index) => (\n                    <Event\n                        interval={`${data.dateMin} - ${data.dateMax}`}\n                        key={`experience-item-${index}`}\n                        title={data.title}\n                        subtitle={data.company}\n                    >\n                        {data.summary}\n                    </Event>\n                ))}\n            </Timeline>\n        </div>\n    </Info>\n);\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst ProgressBar = ({ progress }) => (\n    <div className=\"progress-bar\">\n        <div className=\"progress-bar__fill\" style={{ width: `${progress}%` }} />\n        <div className=\"progress-bar__value\">\n            {progress}\n        </div>\n    </div>\n);\n\nProgressBar.propTypes = {\n    progress: PropTypes.number.isRequired\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport ProgressBar from '../../progress-bar';\n\nconst SkillItem = ({ progress, title }) => (\n    <div className=\"skill-item\">\n        <div className=\"skill-item__title\">\n            <span>{title}</span>\n        </div>\n\n        <ProgressBar progress={progress} />\n    </div>\n);\n\nSkillItem.propTypes = {\n    progress: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n};\n\nexport default SkillItem;\n","import React from 'react';\n\n// @components\nimport Info from '../info';\nimport SkillItem from './skill-item';\n\n// @data\nimport { professionalSkilss } from '../../data';\n\n// @styles\nimport './style.scss';\n\nconst Skills = () => (\n    <Info title=\"Skills\">\n        <div className=\"skills\">\n            {professionalSkilss.map((skill, index) => (\n                <SkillItem {...skill} key={`professional-skill-${index}`} />\n            ))}\n        </div>\n    </Info>\n);\n\nexport default Skills;\n","import React from 'react';\n\n// @components\nimport AboutMe from '../../components/about-me';\nimport Experience from '../../components/experience';\nimport Skills from '../../components/skills';\n\n// @styles\nimport './style.scss';\n\nconst Home = () => (\n    <div className=\"home\">\n        <AboutMe />\n        <Experience />\n        <Skills />\n    </div>\n);\n\nexport default Home;\n","import React from 'react';\n\n// @components\nimport { SocialIcon } from 'react-social-icons';\n\n// @styles\nimport './style.scss';\n\nconst openSocialNetwork = (path) => () => {\n    window.open(path, '_blank')\n};\n\nconst AVATAR_URL = 'https://cdn.iconscout.com/icon/free/png-256/avatar-369-456321.png';\n\nconst Jumbotron = () => (\n    <section className=\"jumbotron\">\n        <div className=\"avatar\">\n            <img alt=\"Avatar\" src={AVATAR_URL} />\n        </div>\n\n        <div className=\"jumbotron__info\">\n            <div className=\"jumbotron__name\">\n                David Higuita\n            </div>\n\n            <div className=\"jumbotron__position\">\n                Front End Developer\n            </div>\n\n            <div className=\"jumbotron__social\">\n                <div\n                    className=\"jumbotron__social-item\"\n                    onClick={openSocialNetwork('https://github.com/davidhiguita')}\n                >\n                    <SocialIcon\n                        bgColor=\"#FFFFFF\"\n                        network=\"github\"\n                    />\n                </div>\n\n                <div\n                    className=\"jumbotron__social-item\"\n                    onClick={openSocialNetwork('https://twitter.com/dhv_xvx')}\n                >\n                    <SocialIcon\n                        bgColor=\"#FFFFFF\"\n                        network=\"twitter\"\n                    />\n                </div>\n\n                <div\n                    className=\"jumbotron__social-item\"\n                    onClick={openSocialNetwork('https://www.linkedin.com/in/david-higuita-873bb293/')}\n                >\n                    <SocialIcon\n                        bgColor=\"#FFFFFF\"\n                        network=\"linkedin\"\n                    />\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default Jumbotron;\n","import React from 'react';\n\n// @router\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\n// @components\nimport Header from './components/header';\nimport Home from './layouts/home';\nimport Jumbotron from './components/jumbotron';\n\n// @styles\nimport 'react-md/src/scss/_react-md.scss';\nimport './style.scss';\n\nconst Curriculum = () => (\n    <HashRouter basename=\"/\">\n        <div className=\"curriculum\">\n            <Header />\n\n            <div className=\"curriculum__content\">\n                <Jumbotron />\n\n                <div className=\"curriculum__route\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    </HashRouter>\n);\n\nexport default Curriculum;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}